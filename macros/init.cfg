#####################################################################
# 	Macros
#####################################################################

[gcode_macro G32]
gcode:
    M117 Turning on nevermore...
    SET_FAN_SPEED FAN=nevermore_fan SPEED=1 
    M117 Turning on rear exhaust
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.3
    SET_LED led=my_neopixel blue=1
    M117 Homing XYZ...
    BED_MESH_CLEAR
    G28
    ATTACH_PROBE_LOCK

    M117 Gucci leveling...
    SET_LED led=my_neopixel green=1
    Z_TILT_ADJUST

    M117 ez mode z offset...
    SET_LED led=my_neopixel green=1 blue=1
    CALIBRATE_Z

    G0 X152 Y152 Z30 F3600 # return to center of build plate

    SET_LED led=my_neopixel blue=1 green=1 red=1

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    {% set init_hotendtemp = params.HOTEND|float * 0.80 %}
    M117 Macro setting bed temp...
    M140 S{bedtemp}
    M104 S{init_hotendtemp}
    M117 Homing routine...
    G32                            ; home all axes
    G1 Z20 F3000                   ; move nozzle away from bed
    {% if hotendtemp > 240 %}
    M117 Heatsoaking for an additional 1 hour...
    G4 P900000 # 15 minutes in milliseconds
    #G4 P3600000 # 1 hour in milliseconds
    {% endif %}
    M117 Running bed mesh...
    BED_MESH_CALIBRATE
    DOCK_PROBE_UNLOCK
    BED_MESH_PROFILE LOAD=default
    M117 Macro setting hotend temp...
    M109 S{hotendtemp}                                                           ; set & wait for hotend temp
    M190 S{bedtemp}                                                              ; set & wait for bed temp

    M117 Purging extruder...
    G92 E0     ; reset extruder
    G1 Z1.0 F3000    ; move z up little to prevent scratching of surface
    G1 X4 Y9 Z0.3 F5000.0  ; move to start-line position
    G1 X4 Y280.0 Z0.3 F1500.0 E15  ; draw 1st line
    G1 X4.4 Y280.0 Z0.3 F5000.0  ; move to side a little
    G1 X4.4 Y9 Z0.3 F1500.0 E30  ; draw 2nd line
    G92 E0     ; reset extruder
    G1 Z1.0 F3000    ; move z up little to prevent scratching of surface
    G1 X5 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish
    M117 Printing.....


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 100) %}
        {% set z_safe = 100.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    #G1 Z2 F3000                    ; move nozzle up 2mm
    G1 Z{z_safe} F900
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    SET_FAN_SPEED FAN=exhaust_fan SPEED=1

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 100) %}
      {% set z_safe = 100.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G1 Z{z_safe} F900
  SET_FAN_SPEED FAN=exhaust_fan SPEED=1
